@startuml
title Diagrama de classes UML do Simulador de Hidrometro

class Cano {
    - bitola: float
    - tempoMiliseg: int
    - vazao: float
    - isAr: bool

    + getBitola(): float
    + getVazao(): float
    + getTempoMiliseg(): int
    + getIsAr(): Bool
    + setVazao(vazao: float): void
    + setIsAr(isAr: bool): void
}

class Display {
    - caminhoImagemBase: string
    - nomeJanela: string

    + gerarImagem(consumo: string): frame
    + exibirImagem(frame: frame, tempo: int): void
    + salvarImagemJpeg(frame: frame, caminho: string): void
}

class Hidrometro {
    - entrada: Cano
    - saida: Cano
    - volumeMax: int
    - consumo: float
    - perdaAr: float
    - dezenasLitros: int
    - centenasLitros: int
    - volume: int

    + getConsumo(): int
    + getEntrada(): Cano
    + getDezenasLitros(): int
    + getCentenasLitros(): int
    + getVolume(): int
    + medir(): void
}

class Controlador {
    - intervaloImagem: int
    - hidrometro: Hidrometro
    - display: Display
    - parar: bool

    - gerarVazaoAleatoria(): float
    - gerarArAleatorio: bool
    - consumoFormatado: string
    - controlar(): void
    + iniciarControle(): void
    + pararControle(): void
    + exibicao(): void
}

'--- Relações ---
Hidrometro o-- Cano : entrada
Hidrometro o-- Cano : saida
Controlador o-- Hidrometro : controla
Controlador o-- Display : controla

@enduml